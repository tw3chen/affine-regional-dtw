clc;
clear all;
close all;

place = [ ...
    'Arvida     '; ...
    'Bagottville'; ...
    'Calgary    '; ...
    'Charlottown'; ...
    'Churchill  '; ...
    'Dawson     '; ...
    'Edmonton   '; ...
    'Fredericton'; ...
    'Halifax    '; ...
    'Inuvik     '; ...
    'Iqaluit    '; ...
    'Kamloops   '; ...
    'London     '; ...
    'Montreal   '; ...
    'Ottawa     '; ...
    'Pr. Albert '; ...
    'Pr. George '; ...
    'Pr. Rupert '; ...
    'Quebec     '; ...
    'Regina     '; ...
    'Resolute   '; ...
    'Scheffervll'; ...
    'Sherbrooke '; ...
    'St. Johns  '; ...
    'Sydney     '; ...
    'The Pas    '; ...
    'Thunder Bay'; ...
    'Toronto    '; ...
    'Uranium Cty'; ...
    'Vancouver  '; ...
    'Victoria   '; ...
    'Whitehorse '; ...
    'Winnipeg   '; ...
    'Yarmouth   '; ...
    'Yellowknife'];

fid    = fopen('dailtemp.dat','rt');
tempav = fscanf(fid,'%f');
tempav = reshape(tempav, [365,35]);
for i = 1:size(tempav,2)
    tempav(:,i) = smooth(tempav(:,i),20);
end

geogindex = [24,  9, 25, 34,  4,  8, 22,  1,  2, 19, 23, 14, 15, 28, 13, ...
             27, 33, 26,  5, 20, 16, 29,  7,  3, 12, 30, 31, 17, 18, 32, ...
              6, 35, 11, 10, 21];
% place  = place(geogindex,:);
% tempav = tempav(:,geogindex);

Index1 = 23; % 28, 21
Index2 = 21;
Signal1 = tempav(:,Index1);
Signal2 = tempav(:,Index2);
Signals = [Signal1'; Signal2'];
Length = size(Signals,2);

Figure1 = figure(1);
set(Figure1, 'Position', [100, 100, 1000, 500]);
YLims = [min([min(Signals(1,:)), min(Signals(2,:))]) - 3, max([max(Signals(1,:)), max(Signals(2,:))]) + 3];
XLims = [0, Length];

subaxis(2, 3, 1, 1, 'SpacingVertical', 0.1, 'SpacingHorizontal', 0.1, 'Padding', 0, 'Margin', 0.1);
plot(Signals(1,:), 'k');
ylim(YLims);
xlim(XLims);
set(gca, 'XTick', [], 'XTicklabel', '');
title({'Time series s:', [' temperature data in ' place(Index1,:)]});
subaxis(2, 3, 2, 1, 'SpacingVertical', 0.1, 'SpacingHorizontal', 0.1, 'Padding', 0, 'Margin', 0.1);
plot(Signals(2,:), 'k');
ylim(YLims);
xlim(XLims);
set(gca, 'XTick', [], 'XTicklabel', '');
title({'Time series t:', [' temperature data in ' place(Index2,:)]});

Signals = Signals / 30;

subaxis(2, 3, 1, 2, 'SpacingVertical', 0.05, 'SpacingHorizontal', 0.1, 'Padding', 0, 'Margin', 0.1);
[Distance Path] = RDTW(Signals(1,:)', Signals(2,:)', 1, 0);
PlotAlignment(Signals(1,:), Signals(2,:), Path, 300, 200, 1, 20);
title('A. DTW on s and t');

subaxis(2, 3, 2, 2, 'SpacingVertical', 0.05, 'SpacingHorizontal', 0.1, 'Padding', 0, 'Margin', 0.1);
[Distance Path] = RDTW(zscore(Signals(1,:)'), zscore(Signals(2,:)'), 1, 0);
PlotAlignment(Signals(1,:), Signals(2,:), Path, 300, 200, 1, 20);
title('B. Normalization prior to applying DTW on s and t');

subaxis(2, 3, 3, 2, 'SpacingVertical', 0.05, 'SpacingHorizontal', 0.1, 'Padding', 0, 'Margin', 0.1);
[Distance Path Scaling Offset] = ADTW(Signals(1,:)', Signals(2,:)', 1, 1, 0, 10^-5, 0.2, 5);
PlotAlignment(Signals(1,:), Signals(2,:), Path, 300, 200, 1, 20);
title('C. ADTW on s and t');

set(gcf, 'Color', 'w');
set(findall(gcf,'type','text'),'FontSize',13);
export_fig( gcf, ...      % figure handle
    'ADTWApplyOnIntroductoryExample',... % name of output file without extension
    '-painters', ...      % renderer
    '-jpg', ...           % file format
    '-r72' );             % resolution in dpi